syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "kvs/proto/chiave";

package chiave;

service Chiave {
  rpc Get(Key) returns (GetResponse) {}
  rpc Increment(Key) returns (google.protobuf.Empty) {}
  rpc Decrement(Key) returns (google.protobuf.Empty) {}
  rpc ProcessEvent(Event) returns (google.protobuf.Empty) {}
}

message Key {
  string id = 1;
  int64 worker_id = 2;
}

enum DT {
  Counter = 0;
  Set = 1;
}

message Event {
  string source = 1;
  string dest = 2;
  DT datatype = 3;
  oneof data {
    OpCounter op_counter = 4;
    StateCounter state_counter = 5;
    DeltaCounter delta_counter = 6;
  }
}

message OpCounter {
  int64 update = 1;
}

message StateCounter {
  map<string, int64> pos = 1;
  map<string, int64> neg = 2;
}

message DeltaCounter {
  map<string, int64> pos = 1;
  map<string, int64> neg = 2;
}


message GetResponse {
  string value = 1;
  bool exists = 2;
}